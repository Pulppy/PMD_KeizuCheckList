<?xml version="1.0"?>

<ruleset name="Code Style"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">

    <description>
Rules which enforce a specific coding style.
    </description>

    

    <rule name="IfElseStmtsMustUseBraces"
          language="apex"
          since="5.6.0"
          message="[General-25] Cau dieu kien if phai co dau () va dau '{}' "
          class="net.sourceforge.pmd.lang.apex.rule.ApexXPathRule">
        <description>
Avoid using if..else statements without using surrounding braces. If the code formatting
or indentation is lost then it becomes difficult to separate the code being controlled
from the rest.
        </description>
        <priority>3</priority>
        <properties>
            <property name="xpath">
                <value>
<![CDATA[
//IfBlockStatement/BlockStatement[@CurlyBrace='false'][count(child::*) > 0]
|
//IfElseBlockStatement/BlockStatement[@CurlyBrace='false'][count(child::*) > 0]
]]>
                </value>
            </property>
        </properties>
        <example>
<![CDATA[
// this is OK
if (foo) x++;

// but this is not
if (foo)
    x = x+1;
else
    x = x-1;
]]>
        </example>
    </rule>

    <rule name="ForLoopsMustUseBraces"
          language="apex"
          since="5.6.0"
          message="Avoid using 'for' statements without curly braces"
          class="net.sourceforge.pmd.lang.apex.rule.ApexXPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_apex_codestyle.html#forloopsmustusebraces">
        <description>
Avoid using 'for' statements without using surrounding braces. If the code formatting or
indentation is lost then it becomes difficult to separate the code being controlled
from the rest.
        </description>
        <priority>3</priority>
        <properties>
            <property name="xpath">
                <value>
<![CDATA[
//ForLoopStatement/BlockStatement[@CurlyBrace='false']
|
//ForEachStatement/BlockStatement[@CurlyBrace='false']
]]>
                </value>
            </property>
        </properties>
        <example>
<![CDATA[
for (int i = 0; i < 42; i++) // not recommended
    foo();

for (int i = 0; i < 42; i++) { // preferred approach
    foo();
}
]]>
        </example>
    </rule>

    <rule name="OneDeclarationPerLine"
          since="6.7.0"
          message="Use one statement for each line, it enhances code readability."
          class="net.sourceforge.pmd.lang.apex.rule.ApexXPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_apex_codestyle.html#onedeclarationperline">
        <description>
Apex allows the use of several variables declaration of the same type on one line. However, it
can lead to quite messy code. This rule looks for several declarations on the same line.
        </description>
        <priority>1</priority>
        <properties>
            <property name="xpath">
                <value>
<![CDATA[
//VariableDeclarationStatements
  [count(VariableDeclaration) > 1]
  [$strictMode or count(distinct-values(VariableDeclaration/@BeginLine)) != count(VariableDeclaration)]
|
//FieldDeclarationStatements
  [count(FieldDeclaration) > 1]
  [$strictMode or count(distinct-values(FieldDeclaration/VariableExpression/@BeginLine)) != count(FieldDeclaration/VariableExpression)]
]]>
                </value>
            </property>
            <property name="version" value="2.0"/>
            <property name="strictMode" type="Boolean" value="false"
                      description="If true, mark combined declaration even if the declarations are on separate lines."/>
        </properties>
        <example>
<![CDATA[
Integer a, b;   // not recommended

Integer a,
        b;      // ok by default, can be flagged setting the strictMode property

Integer a;      // preferred approach
Integer b;
]]>
        </example>
    </rule>

    <rule name="PropertyNamingConventions"
          since="6.15.0"
          message="The {0} name ''{1}'' doesn''t match ''{2}''"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.PropertyNamingConventionsRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_apex_codestyle.html#propertynamingconventions">
        <description>
            Configurable naming conventions for property declarations. This rule reports
            property declarations which do not match the regex that applies to their
            specific kind (e.g. static property, or instance property). Each regex can be
            configured through properties.

            By default this rule uses the standard Apex naming convention (Camel case).
        </description>
        <priority>1</priority>
        <example>
<![CDATA[
public class Foo {
    public Integer instanceProperty { get; set; } // This is in camel case, so it's ok

    public Integer INSTANCE_PROPERTY { get; set; } // This will be reported unless you change the regex
}
]]>
        </example>
    </rule>

    <rule name="WhileLoopsMustUseBraces"
          language="apex"
          since="5.6.0"
          message="Avoid using 'while' statements without curly braces"
          class="net.sourceforge.pmd.lang.apex.rule.ApexXPathRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_apex_codestyle.html#whileloopsmustusebraces">
        <description>
Avoid using 'while' statements without using braces to surround the code block. If the code
formatting or indentation is lost then it becomes difficult to separate the code being
controlled from the rest.
        </description>
        <priority>3</priority>
        <properties>
            <property name="xpath">
                <value>
<![CDATA[
//WhileLoopStatement/BlockStatement[@CurlyBrace='false']
]]>
                </value>
            </property>
        </properties>
        <example>
<![CDATA[
while (true)    // not recommended
    x++;

while (true) {  // preferred approach
    x++;
}
]]>
        </example>
    </rule>
    
    
    <rule name="Check-List-TestClass-6"
		  since="5.6.0"
          message="[TestClass-6] Ten testClass phai la dang ten controler + Test. Truong hop trong tai lieu co ghi khac thi confirm lai voi nguoi viet tai lieu"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.TestClass06">
          <description>
          </description>
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <rule name="Check-List-TestClass-7"
		  since="5.6.0"
          message="[TestClass-7] Ten method test phai bat dau va chu test + Method muon test. 
					Vidu: testSubString()"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.TestClass07">
          <description>
          </description>
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <rule name="Check-List-Trigger-2"
		  since="5.6.0"
          message="[Trigger-2] Khi xu ly trigger thi phai tao cac lop handler de xe ly, trong file trigger chi xu ly su kien va delegate cho cac lop handler thuc hien"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.Trigger02">
       
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <rule name="Check-List-VisualPage-6"
		  since="5.6.0"
          message="[VisualPage-6] Khi thuc hien xu ly loi thi uu tien su dung FATAL, neu tai lieu ko ghi thi xac nhan lai giup"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.VisualPage06">
       
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <rule name="Check-List-VisualPage-18"
		  since="5.6.0"
          message="[VisualPage-18] Nhung method nao return la Pagereference thi phai co try cacth"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.VisualPage18">
       
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <rule name="Check-List-General-1"
          since="5.5.0"
          message="[General-1] Ten method phai viet thuong , tu chu thu 2 tro di phai viet hoa chu dau tien "
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.MethodNamingConventionsRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_apex_codestyle.html#methodnamingconventions">
        <description>
            Configurable naming conventions for method declarations. This rule reports
            method declarations which do not match the regex that applies to their
            specific kind (e.g. static method, or test method). Each regex can be
            configured through properties.

            By default this rule uses the standard Apex naming convention (Camel case).
        </description>
        <priority>3</priority>
        <example>
<![CDATA[
public class Foo {
    public void instanceMethod() { } // This is in camel case, so it's ok

    public void INSTANCE_METHOD() { } // This will be reported unless you change the regex
]]>
        </example>
    </rule>
    
    <rule name="Check-List-General-2"
		  since="5.6.0"
          message="[General-2] Trong xu ly, nhung method hoac funtion public phai co try catch de xu ly loi, Neu tai lieu ko ghi thi confirm lai giup."
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.General02">
       
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <rule name="Check-List-General-4"
          since="5.5.0"
          message="[General-4] Viet hoa ten class (Ky tu dau tien cua ten class phai viet HOA)"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.ClassNamingConventionsRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_apex_codestyle.html#classnamingconventions">
        <description>       
        </description>
        <priority>3</priority>
    </rule>
    
    <rule name="Check-List-General-5"
		  since="5.6.0"
          message="[General-5] Truong hop la class su dung trong batch thi dat ten theo kieu: danh tu ＋  Batch"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.General05">
       
            <priority>3</priority>
	</rule>
    
    
    
    <rule name="Check-List-General-6"
		  since="5.6.0"
          message="[General-6] Truong hop la class su dung trong trigger thi đat ten theo kieu : ten Object (xoa chu __c)　＋　Trigger"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.General06">
       
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <rule name="Check-List-General-9"
		  since="5.6.0"
          message="[General-9] Dat ten cac bien sao cho de dung, de nho. Su dung cac tu nhu is, has….de dat ten bien"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.General09">
       
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <!-- <rule name="Check-List-Geneneral-11"
		  since="5.6.0"
          message="[General-11] Thuc hien khai bao bang Constant nhung bien su dung nhieu lan.
					Vi du: public final Integer COLUMN_DATE = 0; //実績日付 "
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.General11">
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule> -->
    
    <rule name="Check-List-General-12"
		  since="5.6.0"
          message="[General-12] Khi su dung check size of list thi phai su dung ham isEmpty()
					if (membershipHistoryList.size() > 0) -> if (!membershipHistoryList.isEmpty())"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.General12">
       
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
  	
  	<!-- Handle local variable -->
    <rule name="Check-List-General-13"
          since="5.5.0"
          deprecated="true"
          message="[General-13] Ten bien bang chu thuong, tu chu thu 2 tro di phai viet hoa chu dau tien "
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.VariableNamingConventionsRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_apex_codestyle.html#variablenamingconventions">
        <description>

        </description>
        <priority>3</priority>
    </rule>
    
    <rule name="Check-List-General-15"
		  since="5.6.0"
          message="[General-15] Khong duoc thiet lap bien class, bien  instance o trang thai public, neu thiet lap thi phai xac nhan voi PL"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.General15">
          <description>
          Use Private Variable
          </description>
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <rule name="Check-List-General-18"
		  since="5.6.0"
          message="[General-18] Ngat tung parameter bang dau phay,  sau do phai la 1 space 1byte"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.General18">
       
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <rule name="Check-List-General-19"
		  since="5.6.0"
          message="[General-19] Khong khai bao bien toan cuc ko can thiet, uu tien khai bao trong method"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.General19">
          <description>
          </description>
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <rule name="Check-List-General-20"
		  since="5.6.0"
          message="[General-20] Trong salseforce co gioi han, nen giam thieu toi da su dung loop."
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.General20">
          <description>
          </description>
            <priority>1</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <rule name="Check-List-General-22"
		  since="5.6.0"
          message="[General-22] Truong hop For Index - Chi su dung ten bien 1 ky tu trong vong lap for 
					Truong hop For Object - Phai đat ten bien co y nghaa"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.General22">
       
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <rule name="Check-List-General-23"
		  since="5.6.0"
          message="[General-23] Trong vong for va while neu la hang so thi khong đuoc viet -1 ，0 ，1 ma dat ra cac hang so de su dung"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.General23">
          <description>
          Don't use constant to declare number of loop
          </description>
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <rule name="Check-List-General-24"
		  since="5.6.0"
          message="[General-24] Trong xu ly loop, khong su dung xu ly @future"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.General24">
       
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <rule name="Check-List-General-33"
		  since="5.6.0"
          message="[General-33] Nhung source comment ko can thiet thi phai delete sau khi hoan thanh coding, ke ca cac dong system.debug"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.General33">
          <description>
          Delete debug after done coding
          </description>
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <rule name="Check-List-General-43"
		  since="5.6.0"
          message="[General-43] Tranh su dung nhieu SOQL khong can thiet, giam thieu phat sinh SOQL cang nhieu cang tot. Toi da 10 SOQL"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.General43">
          <description>
          Delete debug after done coding
          </description>
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <rule name="Check-List-General-53"
		  since="5.6.0"
          message="[General-53] Trong source controller, test class, page KO HARDCODE page apex/confirm ma thay the bang cach Page.Confim"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.General53">
       
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <rule name="Check-List-Batch-06"
		  since="5.6.0"
          message="[Batch-06] Trong batch ko the dang ki dc nhieu schedule chu y"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.Batch06">
       
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <rule name="Check-List-Batch-05"
		  since="5.6.0"
          message="[Batch-05] Nhung doi tuong chi xu ly update, insert 1 lan chu y de trong finish. (trong truong hop xu ly so luong nhieu record qua gioi han cua salesforce vi neu de trong execute thi co kha nag method se dc xu ly lap lai nhieu lan, vi 1 lan salesforce chi cho xu ly toi da 200 records)h."
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.Batch05">
       
            <priority>3</priority>

          <example>
    <![CDATA[
       
    ]]>
          </example>
    </rule>
    
    <rule name="Check-List-Batch-10"
		  since="5.6.0"
          message="[Batch-10] Trong test class phai dat method Test.StartTest, Test.StopTest khi goi batch"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.Batch10">
       
            <priority>3</priority>

          <example>
    <![CDATA[
    Test.StartTest();

　　　		DataMigrateBatch dataMigrateBatch = new　DataMigrateBatch();
　　　		Database.executeBatch(dataMigrateBatch);

      Test.StopTest();
    ]]>
          </example>
    </rule>
    
    <rule name="AvoidDeeplyNestedIfStmts"
		since="5.5.0"
		message="[General-26] Trong cau dieu kien if khong duoc long vao nhau , khong nen long phuc tap"
		class="net.sourceforge.pmd.lang.apex.rule.design.AvoidDeeplyNestedIfStmtsRule"
		externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_apex_design.html#avoiddeeplynestedifstmts">		
		<priority>3</priority>
	</rule>
		
	<rule name="AvoidDmlStatementsInLoops"
          since="5.5.0"
          message="[General-39] Trong xu ly loop, khong su dung xu ly DML"
          class="net.sourceforge.pmd.lang.apex.rule.performance.AvoidDmlStatementsInLoopsRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_apex_performance.html#avoiddmlstatementsinloops">
        <priority>3</priority>        
    </rule>
    
    <rule name="AvoidSoqlInLoops"
          since="5.5.0"
          message="[General-46] Trong xu ly loop khong duoc su dung SOQL, SOSL"
          class="net.sourceforge.pmd.lang.apex.rule.performance.AvoidSoqlInLoopsRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_apex_performance.html#avoidsoqlinloops">
        <priority>3</priority>
    </rule>

    <rule name="AvoidSoslInLoops"
          since="6.0.0"
          message="[General-46] Trong xu ly loop khong duoc su dung SOQL, SOSL"
          class="net.sourceforge.pmd.lang.apex.rule.performance.AvoidSoslInLoopsRule"
          externalInfoUrl="https://pmd.github.io/pmd/pmd_rules_apex_performance.html#avoidsoslinloops">
        <priority>3</priority>
    </rule>
    
    <rule name="Batch03"
		  since="5.6.0"
          message="[Batch-03] Uu tien lay cac doi tuong cutom trong method start"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.Batch03">
       
            <priority>3</priority>
    </rule>
    
    <rule name="Batch04"
		  since="5.6.0"
          message="[Batch-04] Trong truog hop xu ly du lieu lon bat buoc phai get du lieu trong Database.getQueryLocator de lay"
          class="net.sourceforge.pmd.lang.apex.rule.codestyle.Batch04">
       
            <priority>3</priority>
    </rule>
</ruleset>
